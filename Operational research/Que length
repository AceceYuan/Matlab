function [Wq,Lq,Out] = QueLen(lambda,mu,c,T,delta,type) 
inT = zeros(1); tSer(1)=0; Out(1) = 0; count = 0;
t = 0;
while t <= T
    count = count+1;
    delt1 = 60*exprnd(1/lambda);
    t = t+delt1;
    if t <= T
        inT(count) = t;
    end
end
N = count-1;
equIn(1:N) = inT(1:N); 
parfor i = 1:N
    delt2 = 60*exprnd(1/mu);
    tSer(i) = delt2;
end
Out(1:N) = inT(1:N)+tSer(1:N);
if N > c
    Serve = 1:c;
    k = c;
    while k <= N
        k = k+1;
        fastOne = min(Out(Serve));
        equIn(k) = max([inT(k),fastOne]);
        Out(k) = equIn(k)+tSer(k);
        index = find(Out(Serve)<=equIn(k));
        k = k+length(index)-1;
        if k >= N
            break
        end
        Serve(index) = (k-length(index)+1):k;
    end
end
Qt = sum(equIn-inT);
Lq = Qt/T;
Wq = Lq/lambda;
if type
index = 0;
for i = 0: delta : T
    index = index + 1;
    S(index) = length(find(inT<i)) - length(find(Out<i));
end
Q = max(S-c,0);
t = 0:delta:T;
plot(t,S,t,Q,'LineWidth',1);
legend('System','Queue')
xlabel('time (min)')
ylabel('number of customers')
title('The number of customers in the system and in the queue during time period [0,T]')
end

