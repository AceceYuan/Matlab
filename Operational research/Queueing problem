function Lq = embque(lambda1,mu,c,T,delta,type)
if type
    hold on
end
[~,Lq(1),inT] = QueLen(lambda1,mu(1),c(1),T,delta,type);
N = length(inT);
parfor i = 1:N
    delt2 = 60*exprnd(1/mu(2));
    tSer(i) = delt2;
end
Out(1:N) = inT(1:N)+tSer(1:N);
equIn(1:N) = inT(1:N); 
if N > c(2)
    Serve = 1:c(2);
    k = c(2);
    while k <= N
        k = k+1;
        fastOne = min(Out(Serve));
        equIn(k) = max([inT(k),fastOne]);
        Out(k) = equIn(k)+tSer(k);
        index = find(Out(Serve)<=equIn(k));
        k = k+length(index)-1;
        if k >= N
            break
        end
        Serve(index) = (k-length(index)+1):k;
    end
end
Qt = sum(equIn-inT);
Lq(2) = Qt/T;
if type
index = 0;
for i = 0: delta : T
    index = index + 1;
    S(index) = length(find(inT<i)) - length(find(Out<i));
end
Q = max(S-c(2),0);
t = 0:delta:T;
plot(t,S,t,Q,'LineWidth',1);
legend('System1','Queue1','System2','Queue2')
xlabel('time (min)')
ylabel('number of customers')
title('The number of customers in two systems and queues during time period [0,T]')
hold off
end

